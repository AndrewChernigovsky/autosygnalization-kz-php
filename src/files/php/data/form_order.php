<?php

require_once __DIR__ . '/../config/config.php';

$data = json_decode(file_get_contents('php://input'), true);

if ($data) {
    $current_data = $data;

    $formData = $current_data['form'];
    $items = $current_data['items'];

    function validateText($text, $field = null, $max_length = 255)
    {
        $text = trim($text);
        if ((empty($text) || !preg_match("/^[\p{L}\s-]+$/u", $text)) && $field !== null) {
            echo json_encode(['success' => false, 'message' => "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: $field"]);
            exit;
        }

        if (mb_strlen($text) > $max_length) {
            echo json_encode(['success' => false, 'message' => "$field –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å $max_length —Å–∏–º–≤–æ–ª–æ–≤"]);
            exit;
        } else if (mb_strlen($text) <= 0) {
            return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        }

        return $text;
    }

    function validateNumber($number, $length, $field)
    {
        if (!preg_match("/^\d{1," . $length . "}$/", $number)) {
            echo json_encode(['success' => false, 'message' => "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {$field}"]);
            exit;
        }
        return $number;
    }

    function validatePhone($phone, $max_length = 20)
    {
        if (!preg_match("/^[0-9+\-() ]+$/", $phone) || strlen($phone) > $max_length) {
            echo json_encode(['success' => false, 'message' => "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω"]);
            exit;
        }
        return $phone;
    }

    function validateEmail($email)
    {
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo json_encode(['success' => false, 'message' => "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email"]);
            exit;
        }
        return $email;
    }

    $client_type = validateText($formData['client_type'], '–¢–∏–ø –∫–ª–∏–µ–Ω—Ç–∞', 100);
    $country = validateText($formData['country'], '–°—Ç—Ä–∞–Ω–∞', 40);
    $city = validateText($formData['city'], '–ì–æ—Ä–æ–¥', 40);
    $street = validateText($formData['street'], '–£–ª–∏—Ü–∞', 50);
    $house = validateNumber($formData['house'], 3, '–î–æ–º');
    $apartment = validateNumber($formData['apartment'], 3, '–ö–≤–∞—Ä—Ç–∏—Ä–∞');
    $index = validateNumber($formData['index'], 6, '–ò–Ω–¥–µ–∫—Å');
    $user_name = validateText($formData['user-name'], '–ò–º—è', 20);
    $user_lastname = validateText($formData['user-lastname'], '–§–∞–º–∏–ª–∏—è', 30);
    $telephone = validatePhone($formData['telephone']);
    $comments = validateText($formData['comments'], null, 200);
    $email = validateEmail($formData['email']);


    $emailBody = "üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:*\n\n";
    $emailBody .= "üë§ *–¢–∏–ø –∫–ª–∏–µ–Ω—Ç–∞:* " . $client_type . "\n";
    $emailBody .= "üåç *–°—Ç—Ä–∞–Ω–∞:* " . $country . "\n";
    $emailBody .= "üèô *–ì–æ—Ä–æ–¥:* " . $city . "\n";
    $emailBody .= "üìç *–ê–¥—Ä–µ—Å:* " . $street . ", " . $house . "-" . $apartment . "\n";
    $emailBody .= "üì¨ *–ò–Ω–¥–µ–∫—Å:* " . $index . "\n";
    $emailBody .= "üÜî *–ò–º—è:* " . $user_name . "\n";
    $emailBody .= "üÜî *–§–∞–º–∏–ª–∏—è:* " . $user_lastname . "\n";
    $emailBody .= "üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* " . $telephone . "\n";
    $emailBody .= "‚úâÔ∏è *Email:* " . $email . "\n";
    $emailBody .= "üöö *–î–æ—Å—Ç–∞–≤–∫–∞:* " . $formData['delivery-method'] . "\n";
    $emailBody .= "üí≥ *–û–ø–ª–∞—Ç–∞:* " . $formData['payment-method'] . "\n";
    $emailBody .= "üìù *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* " . $comments . "\n";
    $emailBody .= "üìû *–ó–≤–æ–Ω–æ–∫:* " . ($formData['call-me'] ? "–î–∞" : "–ù–µ—Ç") . "\n";
    $emailBody .= "‚úÖ *–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:* " . ($formData['privacy'] ? "–î–∞" : "–ù–µ—Ç") . "\n";


    // –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
    if ($formData['client_type'] === "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ") {
        $company_name = validateText($formData['company-name'], '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏', 40);
        $company_adress = validateText($formData['company-adress'], '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å', 80);
        $INN = validateNumber($formData['INN'], 10, '–ò–ù–ù');
        $KPP = validateNumber($formData['KPP'], 9, '–ö–ü–ü');
        $OGRN = validateNumber($formData['OGRN'], 13, '–û–ì–†–ù');
        $BIK = validateNumber($formData['BIK'], 9, '–ë–ò–ö');
        $cash_number = validateNumber($formData['cash-number'], 20, '–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç');
        $company_index = validateNumber($formData['company-index'], 6, '–ò–Ω–¥–µ–∫—Å –∫–æ–º–ø–∞–Ω–∏–∏');
        $company_telephone = validatePhone($formData['company-telephone']);

        $emailBody .= "\nüè¢ *–î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏:*\n";
        $emailBody .= "üèõ *–ù–∞–∑–≤–∞–Ω–∏–µ:* {$company_name}\n";
        $emailBody .= "üìç *–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å:* {$company_adress}\n";
        $emailBody .= "üì¨ *–ò–Ω–¥–µ–∫—Å:* {$company_index}\n";
        $emailBody .= "üÜî *–ò–ù–ù:* {$INN}\n";
        $emailBody .= "üìú *–ö–ü–ü:* {$KPP}\n";
        $emailBody .= "üìÉ *–û–ì–†–ù:* {$OGRN}\n";
        $emailBody .= "üè¶ *–ë–ò–ö:* {$BIK}\n";
        $emailBody .= "üí≥ *–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç:* {$cash_number}\n";
        $emailBody .= "üìû *–¢–µ–ª–µ—Ñ–æ–Ω –∫–æ–º–ø–∞–Ω–∏–∏:* {$company_telephone}\n";
    }

    $emailBody .= "\nüõç *–¢–æ–≤–∞—Ä—ã:*\n\n";
    foreach ($items as $item) {
        $emailBody .= "üîπ *" . $item['title'] . "*\n";
        $emailBody .= "   üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: " . $item['quantity'] . "\n";
        $emailBody .= "   üí∞ –¶–µ–Ω–∞: " . $item['price'] . " —Ç–µ–Ω–≥–µ\n\n";
    }

    $emailBody .= "\nüí∞ *–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞:* " . $current_data['cost'] . "\n";

    $to = 'chernigovsky108@gmail.com';

    $subject = '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ç–µ';

    $headers = "MIME-Version: 1.0" . "\r\n";
    $headers .= "Content-Type: text/plain; charset=UTF-8" . "\r\n";
    $headers .= "From: andrey@andrew.ru" . "\r\n";
    $CHAT_ID = CHAT_ID;
    $TOKEN = TOKEN;
    $message = urlencode($emailBody);
    $url = "https://api.telegram.org/bot$TOKEN/sendMessage?chat_id=$CHAT_ID&text=$$message";
    file_get_contents($url);
    if (mail($to, $subject, $emailBody, $headers)) {
        echo json_encode(['success' => true, 'message' => '–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ']);
    } else {
        echo json_encode(['success' => false, 'message' => '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ']);
    }

} else {
    echo json_encode(['success' => false, 'message' => '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ']);
}